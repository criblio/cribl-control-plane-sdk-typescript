/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TitleAction = {
  label: string;
  openInNewTab?: boolean | undefined;
  url: string;
};

/** @internal */
export const TitleAction$inboundSchema: z.ZodType<
  TitleAction,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string(),
  openInNewTab: z.boolean().optional(),
  url: z.string(),
});

/** @internal */
export type TitleAction$Outbound = {
  label: string;
  openInNewTab?: boolean | undefined;
  url: string;
};

/** @internal */
export const TitleAction$outboundSchema: z.ZodType<
  TitleAction$Outbound,
  z.ZodTypeDef,
  TitleAction
> = z.object({
  label: z.string(),
  openInNewTab: z.boolean().optional(),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TitleAction$ {
  /** @deprecated use `TitleAction$inboundSchema` instead. */
  export const inboundSchema = TitleAction$inboundSchema;
  /** @deprecated use `TitleAction$outboundSchema` instead. */
  export const outboundSchema = TitleAction$outboundSchema;
  /** @deprecated use `TitleAction$Outbound` instead. */
  export type Outbound = TitleAction$Outbound;
}

export function titleActionToJSON(titleAction: TitleAction): string {
  return JSON.stringify(TitleAction$outboundSchema.parse(titleAction));
}

export function titleActionFromJSON(
  jsonString: string,
): SafeParseResult<TitleAction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TitleAction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TitleAction' from JSON`,
  );
}
