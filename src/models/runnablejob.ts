/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  RunnableJobCollection,
  RunnableJobCollection$inboundSchema,
  RunnableJobCollection$Outbound,
  RunnableJobCollection$outboundSchema,
} from "./runnablejobcollection.js";
import {
  RunnableJobExecutor,
  RunnableJobExecutor$inboundSchema,
  RunnableJobExecutor$Outbound,
  RunnableJobExecutor$outboundSchema,
} from "./runnablejobexecutor.js";
import {
  RunnableJobScheduledSearch,
  RunnableJobScheduledSearch$inboundSchema,
  RunnableJobScheduledSearch$Outbound,
  RunnableJobScheduledSearch$outboundSchema,
} from "./runnablejobscheduledsearch.js";

export type RunnableJob =
  | RunnableJobCollection
  | RunnableJobExecutor
  | RunnableJobScheduledSearch;

/** @internal */
export const RunnableJob$inboundSchema: z.ZodType<
  RunnableJob,
  z.ZodTypeDef,
  unknown
> = z.union([
  RunnableJobCollection$inboundSchema,
  RunnableJobExecutor$inboundSchema,
  RunnableJobScheduledSearch$inboundSchema,
]);

/** @internal */
export type RunnableJob$Outbound =
  | RunnableJobCollection$Outbound
  | RunnableJobExecutor$Outbound
  | RunnableJobScheduledSearch$Outbound;

/** @internal */
export const RunnableJob$outboundSchema: z.ZodType<
  RunnableJob$Outbound,
  z.ZodTypeDef,
  RunnableJob
> = z.union([
  RunnableJobCollection$outboundSchema,
  RunnableJobExecutor$outboundSchema,
  RunnableJobScheduledSearch$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunnableJob$ {
  /** @deprecated use `RunnableJob$inboundSchema` instead. */
  export const inboundSchema = RunnableJob$inboundSchema;
  /** @deprecated use `RunnableJob$outboundSchema` instead. */
  export const outboundSchema = RunnableJob$outboundSchema;
  /** @deprecated use `RunnableJob$Outbound` instead. */
  export type Outbound = RunnableJob$Outbound;
}

export function runnableJobToJSON(runnableJob: RunnableJob): string {
  return JSON.stringify(RunnableJob$outboundSchema.parse(runnableJob));
}

export function runnableJobFromJSON(
  jsonString: string,
): SafeParseResult<RunnableJob, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunnableJob$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunnableJob' from JSON`,
  );
}
