/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpgradeGroupSettings = {
  isRolling?: boolean | undefined;
  quantity?: number | undefined;
  retryCount?: number | undefined;
  retryDelay?: number | undefined;
};

/** @internal */
export const UpgradeGroupSettings$inboundSchema: z.ZodType<
  UpgradeGroupSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  isRolling: z.boolean().optional(),
  quantity: z.number().optional(),
  retryCount: z.number().optional(),
  retryDelay: z.number().optional(),
});

/** @internal */
export type UpgradeGroupSettings$Outbound = {
  isRolling?: boolean | undefined;
  quantity?: number | undefined;
  retryCount?: number | undefined;
  retryDelay?: number | undefined;
};

/** @internal */
export const UpgradeGroupSettings$outboundSchema: z.ZodType<
  UpgradeGroupSettings$Outbound,
  z.ZodTypeDef,
  UpgradeGroupSettings
> = z.object({
  isRolling: z.boolean().optional(),
  quantity: z.number().optional(),
  retryCount: z.number().optional(),
  retryDelay: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpgradeGroupSettings$ {
  /** @deprecated use `UpgradeGroupSettings$inboundSchema` instead. */
  export const inboundSchema = UpgradeGroupSettings$inboundSchema;
  /** @deprecated use `UpgradeGroupSettings$outboundSchema` instead. */
  export const outboundSchema = UpgradeGroupSettings$outboundSchema;
  /** @deprecated use `UpgradeGroupSettings$Outbound` instead. */
  export type Outbound = UpgradeGroupSettings$Outbound;
}

export function upgradeGroupSettingsToJSON(
  upgradeGroupSettings: UpgradeGroupSettings,
): string {
  return JSON.stringify(
    UpgradeGroupSettings$outboundSchema.parse(upgradeGroupSettings),
  );
}

export function upgradeGroupSettingsFromJSON(
  jsonString: string,
): SafeParseResult<UpgradeGroupSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpgradeGroupSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpgradeGroupSettings' from JSON`,
  );
}
