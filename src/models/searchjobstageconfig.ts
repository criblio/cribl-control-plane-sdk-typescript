/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CacheStatusByDatasetIdUnion,
  CacheStatusByDatasetIdUnion$inboundSchema,
  CacheStatusByDatasetIdUnion$Outbound,
  CacheStatusByDatasetIdUnion$outboundSchema,
} from "./cachestatusbydatasetidunion.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  JobExecutionWarning,
  JobExecutionWarning$inboundSchema,
  JobExecutionWarning$Outbound,
  JobExecutionWarning$outboundSchema,
} from "./jobexecutionwarning.js";
import {
  SearchConfig,
  SearchConfig$inboundSchema,
  SearchConfig$Outbound,
  SearchConfig$outboundSchema,
} from "./searchconfig.js";
import {
  StageDependency,
  StageDependency$inboundSchema,
  StageDependency$Outbound,
  StageDependency$outboundSchema,
} from "./stagedependency.js";

export type SearchJobStageConfigEarliest = string | number;

export type SearchJobStageConfigLatest = string | number;

export const SearchJobStageConfigStatus = {
  Failed: "failed",
  New: "new",
  Running: "running",
  Completed: "completed",
  Canceled: "canceled",
  Queued: "queued",
} as const;
export type SearchJobStageConfigStatus = OpenEnum<
  typeof SearchJobStageConfigStatus
>;

export type SearchJobStageConfig = {
  cacheStatusByDatasetId?:
    | { [k: string]: CacheStatusByDatasetIdUnion }
    | undefined;
  dependencies: Array<StageDependency>;
  earliest?: string | number | undefined;
  executionWarnings?: Array<JobExecutionWarning> | undefined;
  filter: string;
  id: string;
  latest?: string | number | undefined;
  resolvedDatasetIds: Array<string>;
  searchConfig: SearchConfig;
  status: SearchJobStageConfigStatus;
  subQueryText: string;
};

/** @internal */
export const SearchJobStageConfigEarliest$inboundSchema: z.ZodType<
  SearchJobStageConfigEarliest,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type SearchJobStageConfigEarliest$Outbound = string | number;

/** @internal */
export const SearchJobStageConfigEarliest$outboundSchema: z.ZodType<
  SearchJobStageConfigEarliest$Outbound,
  z.ZodTypeDef,
  SearchJobStageConfigEarliest
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchJobStageConfigEarliest$ {
  /** @deprecated use `SearchJobStageConfigEarliest$inboundSchema` instead. */
  export const inboundSchema = SearchJobStageConfigEarliest$inboundSchema;
  /** @deprecated use `SearchJobStageConfigEarliest$outboundSchema` instead. */
  export const outboundSchema = SearchJobStageConfigEarliest$outboundSchema;
  /** @deprecated use `SearchJobStageConfigEarliest$Outbound` instead. */
  export type Outbound = SearchJobStageConfigEarliest$Outbound;
}

export function searchJobStageConfigEarliestToJSON(
  searchJobStageConfigEarliest: SearchJobStageConfigEarliest,
): string {
  return JSON.stringify(
    SearchJobStageConfigEarliest$outboundSchema.parse(
      searchJobStageConfigEarliest,
    ),
  );
}

export function searchJobStageConfigEarliestFromJSON(
  jsonString: string,
): SafeParseResult<SearchJobStageConfigEarliest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SearchJobStageConfigEarliest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SearchJobStageConfigEarliest' from JSON`,
  );
}

/** @internal */
export const SearchJobStageConfigLatest$inboundSchema: z.ZodType<
  SearchJobStageConfigLatest,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type SearchJobStageConfigLatest$Outbound = string | number;

/** @internal */
export const SearchJobStageConfigLatest$outboundSchema: z.ZodType<
  SearchJobStageConfigLatest$Outbound,
  z.ZodTypeDef,
  SearchJobStageConfigLatest
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchJobStageConfigLatest$ {
  /** @deprecated use `SearchJobStageConfigLatest$inboundSchema` instead. */
  export const inboundSchema = SearchJobStageConfigLatest$inboundSchema;
  /** @deprecated use `SearchJobStageConfigLatest$outboundSchema` instead. */
  export const outboundSchema = SearchJobStageConfigLatest$outboundSchema;
  /** @deprecated use `SearchJobStageConfigLatest$Outbound` instead. */
  export type Outbound = SearchJobStageConfigLatest$Outbound;
}

export function searchJobStageConfigLatestToJSON(
  searchJobStageConfigLatest: SearchJobStageConfigLatest,
): string {
  return JSON.stringify(
    SearchJobStageConfigLatest$outboundSchema.parse(searchJobStageConfigLatest),
  );
}

export function searchJobStageConfigLatestFromJSON(
  jsonString: string,
): SafeParseResult<SearchJobStageConfigLatest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SearchJobStageConfigLatest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SearchJobStageConfigLatest' from JSON`,
  );
}

/** @internal */
export const SearchJobStageConfigStatus$inboundSchema: z.ZodType<
  SearchJobStageConfigStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(SearchJobStageConfigStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const SearchJobStageConfigStatus$outboundSchema: z.ZodType<
  SearchJobStageConfigStatus,
  z.ZodTypeDef,
  SearchJobStageConfigStatus
> = z.union([
  z.nativeEnum(SearchJobStageConfigStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchJobStageConfigStatus$ {
  /** @deprecated use `SearchJobStageConfigStatus$inboundSchema` instead. */
  export const inboundSchema = SearchJobStageConfigStatus$inboundSchema;
  /** @deprecated use `SearchJobStageConfigStatus$outboundSchema` instead. */
  export const outboundSchema = SearchJobStageConfigStatus$outboundSchema;
}

/** @internal */
export const SearchJobStageConfig$inboundSchema: z.ZodType<
  SearchJobStageConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  cacheStatusByDatasetId: z.record(CacheStatusByDatasetIdUnion$inboundSchema)
    .optional(),
  dependencies: z.array(StageDependency$inboundSchema),
  earliest: z.union([z.string(), z.number()]).optional(),
  executionWarnings: z.array(JobExecutionWarning$inboundSchema).optional(),
  filter: z.string(),
  id: z.string(),
  latest: z.union([z.string(), z.number()]).optional(),
  resolvedDatasetIds: z.array(z.string()),
  searchConfig: SearchConfig$inboundSchema,
  status: SearchJobStageConfigStatus$inboundSchema,
  subQueryText: z.string(),
});

/** @internal */
export type SearchJobStageConfig$Outbound = {
  cacheStatusByDatasetId?:
    | { [k: string]: CacheStatusByDatasetIdUnion$Outbound }
    | undefined;
  dependencies: Array<StageDependency$Outbound>;
  earliest?: string | number | undefined;
  executionWarnings?: Array<JobExecutionWarning$Outbound> | undefined;
  filter: string;
  id: string;
  latest?: string | number | undefined;
  resolvedDatasetIds: Array<string>;
  searchConfig: SearchConfig$Outbound;
  status: string;
  subQueryText: string;
};

/** @internal */
export const SearchJobStageConfig$outboundSchema: z.ZodType<
  SearchJobStageConfig$Outbound,
  z.ZodTypeDef,
  SearchJobStageConfig
> = z.object({
  cacheStatusByDatasetId: z.record(CacheStatusByDatasetIdUnion$outboundSchema)
    .optional(),
  dependencies: z.array(StageDependency$outboundSchema),
  earliest: z.union([z.string(), z.number()]).optional(),
  executionWarnings: z.array(JobExecutionWarning$outboundSchema).optional(),
  filter: z.string(),
  id: z.string(),
  latest: z.union([z.string(), z.number()]).optional(),
  resolvedDatasetIds: z.array(z.string()),
  searchConfig: SearchConfig$outboundSchema,
  status: SearchJobStageConfigStatus$outboundSchema,
  subQueryText: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchJobStageConfig$ {
  /** @deprecated use `SearchJobStageConfig$inboundSchema` instead. */
  export const inboundSchema = SearchJobStageConfig$inboundSchema;
  /** @deprecated use `SearchJobStageConfig$outboundSchema` instead. */
  export const outboundSchema = SearchJobStageConfig$outboundSchema;
  /** @deprecated use `SearchJobStageConfig$Outbound` instead. */
  export type Outbound = SearchJobStageConfig$Outbound;
}

export function searchJobStageConfigToJSON(
  searchJobStageConfig: SearchJobStageConfig,
): string {
  return JSON.stringify(
    SearchJobStageConfig$outboundSchema.parse(searchJobStageConfig),
  );
}

export function searchJobStageConfigFromJSON(
  jsonString: string,
): SafeParseResult<SearchJobStageConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SearchJobStageConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SearchJobStageConfig' from JSON`,
  );
}
