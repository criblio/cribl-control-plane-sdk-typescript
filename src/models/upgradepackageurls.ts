/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpgradePackageUrls = {
  packageHashUrl?: string | undefined;
  packageUrl: string;
};

/** @internal */
export const UpgradePackageUrls$inboundSchema: z.ZodType<
  UpgradePackageUrls,
  z.ZodTypeDef,
  unknown
> = z.object({
  packageHashUrl: z.string().optional(),
  packageUrl: z.string(),
});

/** @internal */
export type UpgradePackageUrls$Outbound = {
  packageHashUrl?: string | undefined;
  packageUrl: string;
};

/** @internal */
export const UpgradePackageUrls$outboundSchema: z.ZodType<
  UpgradePackageUrls$Outbound,
  z.ZodTypeDef,
  UpgradePackageUrls
> = z.object({
  packageHashUrl: z.string().optional(),
  packageUrl: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpgradePackageUrls$ {
  /** @deprecated use `UpgradePackageUrls$inboundSchema` instead. */
  export const inboundSchema = UpgradePackageUrls$inboundSchema;
  /** @deprecated use `UpgradePackageUrls$outboundSchema` instead. */
  export const outboundSchema = UpgradePackageUrls$outboundSchema;
  /** @deprecated use `UpgradePackageUrls$Outbound` instead. */
  export type Outbound = UpgradePackageUrls$Outbound;
}

export function upgradePackageUrlsToJSON(
  upgradePackageUrls: UpgradePackageUrls,
): string {
  return JSON.stringify(
    UpgradePackageUrls$outboundSchema.parse(upgradePackageUrls),
  );
}

export function upgradePackageUrlsFromJSON(
  jsonString: string,
): SafeParseResult<UpgradePackageUrls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpgradePackageUrls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpgradePackageUrls' from JSON`,
  );
}
