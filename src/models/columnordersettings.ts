/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ColumnOrderSettings = {
  order: { [k: string]: any };
};

/** @internal */
export const ColumnOrderSettings$inboundSchema: z.ZodType<
  ColumnOrderSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  order: z.record(z.any()),
});

/** @internal */
export type ColumnOrderSettings$Outbound = {
  order: { [k: string]: any };
};

/** @internal */
export const ColumnOrderSettings$outboundSchema: z.ZodType<
  ColumnOrderSettings$Outbound,
  z.ZodTypeDef,
  ColumnOrderSettings
> = z.object({
  order: z.record(z.any()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ColumnOrderSettings$ {
  /** @deprecated use `ColumnOrderSettings$inboundSchema` instead. */
  export const inboundSchema = ColumnOrderSettings$inboundSchema;
  /** @deprecated use `ColumnOrderSettings$outboundSchema` instead. */
  export const outboundSchema = ColumnOrderSettings$outboundSchema;
  /** @deprecated use `ColumnOrderSettings$Outbound` instead. */
  export type Outbound = ColumnOrderSettings$Outbound;
}

export function columnOrderSettingsToJSON(
  columnOrderSettings: ColumnOrderSettings,
): string {
  return JSON.stringify(
    ColumnOrderSettings$outboundSchema.parse(columnOrderSettings),
  );
}

export function columnOrderSettingsFromJSON(
  jsonString: string,
): SafeParseResult<ColumnOrderSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ColumnOrderSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ColumnOrderSettings' from JSON`,
  );
}
