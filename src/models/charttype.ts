/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const ChartType = {
  Area: "area",
  Column: "column",
  Events: "events",
  Funnel: "funnel",
  Gauge: "gauge",
  HorizontalBar: "horizontalBar",
  Line: "line",
  Map: "map",
  Pie: "pie",
  Scatter: "scatter",
  Single: "single",
  Table: "table",
} as const;
export type ChartType = OpenEnum<typeof ChartType>;

/** @internal */
export const ChartType$inboundSchema: z.ZodType<
  ChartType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ChartType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ChartType$outboundSchema: z.ZodType<
  ChartType,
  z.ZodTypeDef,
  ChartType
> = z.union([
  z.nativeEnum(ChartType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChartType$ {
  /** @deprecated use `ChartType$inboundSchema` instead. */
  export const inboundSchema = ChartType$inboundSchema;
  /** @deprecated use `ChartType$outboundSchema` instead. */
  export const outboundSchema = ChartType$outboundSchema;
}
