/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type RedisConnectionLimits = {
  disabled?: boolean | undefined;
  maxConnections?: number | undefined;
};

/** @internal */
export const RedisConnectionLimits$inboundSchema: z.ZodType<
  RedisConnectionLimits,
  z.ZodTypeDef,
  unknown
> = z.object({
  disabled: z.boolean().optional(),
  maxConnections: z.number().optional(),
});

/** @internal */
export type RedisConnectionLimits$Outbound = {
  disabled?: boolean | undefined;
  maxConnections?: number | undefined;
};

/** @internal */
export const RedisConnectionLimits$outboundSchema: z.ZodType<
  RedisConnectionLimits$Outbound,
  z.ZodTypeDef,
  RedisConnectionLimits
> = z.object({
  disabled: z.boolean().optional(),
  maxConnections: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RedisConnectionLimits$ {
  /** @deprecated use `RedisConnectionLimits$inboundSchema` instead. */
  export const inboundSchema = RedisConnectionLimits$inboundSchema;
  /** @deprecated use `RedisConnectionLimits$outboundSchema` instead. */
  export const outboundSchema = RedisConnectionLimits$outboundSchema;
  /** @deprecated use `RedisConnectionLimits$Outbound` instead. */
  export type Outbound = RedisConnectionLimits$Outbound;
}

export function redisConnectionLimitsToJSON(
  redisConnectionLimits: RedisConnectionLimits,
): string {
  return JSON.stringify(
    RedisConnectionLimits$outboundSchema.parse(redisConnectionLimits),
  );
}

export function redisConnectionLimitsFromJSON(
  jsonString: string,
): SafeParseResult<RedisConnectionLimits, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RedisConnectionLimits$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RedisConnectionLimits' from JSON`,
  );
}
