/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type DashboardLayout = {
  h: number;
  w: number;
  x: number;
  y: number;
};

/** @internal */
export const DashboardLayout$inboundSchema: z.ZodType<
  DashboardLayout,
  z.ZodTypeDef,
  unknown
> = z.object({
  h: z.number(),
  w: z.number(),
  x: z.number(),
  y: z.number(),
});

/** @internal */
export type DashboardLayout$Outbound = {
  h: number;
  w: number;
  x: number;
  y: number;
};

/** @internal */
export const DashboardLayout$outboundSchema: z.ZodType<
  DashboardLayout$Outbound,
  z.ZodTypeDef,
  DashboardLayout
> = z.object({
  h: z.number(),
  w: z.number(),
  x: z.number(),
  y: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DashboardLayout$ {
  /** @deprecated use `DashboardLayout$inboundSchema` instead. */
  export const inboundSchema = DashboardLayout$inboundSchema;
  /** @deprecated use `DashboardLayout$outboundSchema` instead. */
  export const outboundSchema = DashboardLayout$outboundSchema;
  /** @deprecated use `DashboardLayout$Outbound` instead. */
  export type Outbound = DashboardLayout$Outbound;
}

export function dashboardLayoutToJSON(
  dashboardLayout: DashboardLayout,
): string {
  return JSON.stringify(DashboardLayout$outboundSchema.parse(dashboardLayout));
}

export function dashboardLayoutFromJSON(
  jsonString: string,
): SafeParseResult<DashboardLayout, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DashboardLayout$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DashboardLayout' from JSON`,
  );
}
