/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CommonServiceLimitConfigs = {
  memoryLimit: string;
};

/** @internal */
export const CommonServiceLimitConfigs$inboundSchema: z.ZodType<
  CommonServiceLimitConfigs,
  z.ZodTypeDef,
  unknown
> = z.object({
  memoryLimit: z.string(),
});

/** @internal */
export type CommonServiceLimitConfigs$Outbound = {
  memoryLimit: string;
};

/** @internal */
export const CommonServiceLimitConfigs$outboundSchema: z.ZodType<
  CommonServiceLimitConfigs$Outbound,
  z.ZodTypeDef,
  CommonServiceLimitConfigs
> = z.object({
  memoryLimit: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommonServiceLimitConfigs$ {
  /** @deprecated use `CommonServiceLimitConfigs$inboundSchema` instead. */
  export const inboundSchema = CommonServiceLimitConfigs$inboundSchema;
  /** @deprecated use `CommonServiceLimitConfigs$outboundSchema` instead. */
  export const outboundSchema = CommonServiceLimitConfigs$outboundSchema;
  /** @deprecated use `CommonServiceLimitConfigs$Outbound` instead. */
  export type Outbound = CommonServiceLimitConfigs$Outbound;
}

export function commonServiceLimitConfigsToJSON(
  commonServiceLimitConfigs: CommonServiceLimitConfigs,
): string {
  return JSON.stringify(
    CommonServiceLimitConfigs$outboundSchema.parse(commonServiceLimitConfigs),
  );
}

export function commonServiceLimitConfigsFromJSON(
  jsonString: string,
): SafeParseResult<CommonServiceLimitConfigs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CommonServiceLimitConfigs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CommonServiceLimitConfigs' from JSON`,
  );
}
