/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetSearchDashboardSearchByPackRequest = {
  /**
   * pack ID to GET
   */
  pack: string;
};

/**
 * a list of SearchDashboard objects
 */
export type GetSearchDashboardSearchByPackResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SearchDashboard> | undefined;
};

/** @internal */
export const GetSearchDashboardSearchByPackRequest$inboundSchema: z.ZodType<
  GetSearchDashboardSearchByPackRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pack: z.string(),
});

/** @internal */
export type GetSearchDashboardSearchByPackRequest$Outbound = {
  pack: string;
};

/** @internal */
export const GetSearchDashboardSearchByPackRequest$outboundSchema: z.ZodType<
  GetSearchDashboardSearchByPackRequest$Outbound,
  z.ZodTypeDef,
  GetSearchDashboardSearchByPackRequest
> = z.object({
  pack: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardSearchByPackRequest$ {
  /** @deprecated use `GetSearchDashboardSearchByPackRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetSearchDashboardSearchByPackRequest$inboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetSearchDashboardSearchByPackRequest$outboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackRequest$Outbound` instead. */
  export type Outbound = GetSearchDashboardSearchByPackRequest$Outbound;
}

export function getSearchDashboardSearchByPackRequestToJSON(
  getSearchDashboardSearchByPackRequest: GetSearchDashboardSearchByPackRequest,
): string {
  return JSON.stringify(
    GetSearchDashboardSearchByPackRequest$outboundSchema.parse(
      getSearchDashboardSearchByPackRequest,
    ),
  );
}

export function getSearchDashboardSearchByPackRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSearchDashboardSearchByPackRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetSearchDashboardSearchByPackRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSearchDashboardSearchByPackRequest' from JSON`,
  );
}

/** @internal */
export const GetSearchDashboardSearchByPackResponse$inboundSchema: z.ZodType<
  GetSearchDashboardSearchByPackResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$inboundSchema).optional(),
});

/** @internal */
export type GetSearchDashboardSearchByPackResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SearchDashboard$Outbound> | undefined;
};

/** @internal */
export const GetSearchDashboardSearchByPackResponse$outboundSchema: z.ZodType<
  GetSearchDashboardSearchByPackResponse$Outbound,
  z.ZodTypeDef,
  GetSearchDashboardSearchByPackResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardSearchByPackResponse$ {
  /** @deprecated use `GetSearchDashboardSearchByPackResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetSearchDashboardSearchByPackResponse$inboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetSearchDashboardSearchByPackResponse$outboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackResponse$Outbound` instead. */
  export type Outbound = GetSearchDashboardSearchByPackResponse$Outbound;
}

export function getSearchDashboardSearchByPackResponseToJSON(
  getSearchDashboardSearchByPackResponse:
    GetSearchDashboardSearchByPackResponse,
): string {
  return JSON.stringify(
    GetSearchDashboardSearchByPackResponse$outboundSchema.parse(
      getSearchDashboardSearchByPackResponse,
    ),
  );
}

export function getSearchDashboardSearchByPackResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetSearchDashboardSearchByPackResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetSearchDashboardSearchByPackResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSearchDashboardSearchByPackResponse' from JSON`,
  );
}
