/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetConfigGroupConfigVersionByProductAndIdRequest = {
  /**
   * Name of the Cribl product to get the Worker Groups or Edge Fleets for.
   */
  product: models.ProductsCore;
  /**
   * The <code>id</code> of the Worker Group or Edge Fleet to get the configuration version for.
   */
  id: string;
};

/**
 * a list of string objects
 */
export type GetConfigGroupConfigVersionByProductAndIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<string> | undefined;
};

/** @internal */
export const GetConfigGroupConfigVersionByProductAndIdRequest$inboundSchema:
  z.ZodType<
    GetConfigGroupConfigVersionByProductAndIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    product: models.ProductsCore$inboundSchema,
    id: z.string(),
  });

/** @internal */
export type GetConfigGroupConfigVersionByProductAndIdRequest$Outbound = {
  product: string;
  id: string;
};

/** @internal */
export const GetConfigGroupConfigVersionByProductAndIdRequest$outboundSchema:
  z.ZodType<
    GetConfigGroupConfigVersionByProductAndIdRequest$Outbound,
    z.ZodTypeDef,
    GetConfigGroupConfigVersionByProductAndIdRequest
  > = z.object({
    product: models.ProductsCore$outboundSchema,
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupConfigVersionByProductAndIdRequest$ {
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupConfigVersionByProductAndIdRequest$inboundSchema;
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupConfigVersionByProductAndIdRequest$outboundSchema;
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdRequest$Outbound` instead. */
  export type Outbound =
    GetConfigGroupConfigVersionByProductAndIdRequest$Outbound;
}

export function getConfigGroupConfigVersionByProductAndIdRequestToJSON(
  getConfigGroupConfigVersionByProductAndIdRequest:
    GetConfigGroupConfigVersionByProductAndIdRequest,
): string {
  return JSON.stringify(
    GetConfigGroupConfigVersionByProductAndIdRequest$outboundSchema.parse(
      getConfigGroupConfigVersionByProductAndIdRequest,
    ),
  );
}

export function getConfigGroupConfigVersionByProductAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigGroupConfigVersionByProductAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigGroupConfigVersionByProductAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigGroupConfigVersionByProductAndIdRequest' from JSON`,
  );
}

/** @internal */
export const GetConfigGroupConfigVersionByProductAndIdResponse$inboundSchema:
  z.ZodType<
    GetConfigGroupConfigVersionByProductAndIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(z.string()).optional(),
  });

/** @internal */
export type GetConfigGroupConfigVersionByProductAndIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<string> | undefined;
};

/** @internal */
export const GetConfigGroupConfigVersionByProductAndIdResponse$outboundSchema:
  z.ZodType<
    GetConfigGroupConfigVersionByProductAndIdResponse$Outbound,
    z.ZodTypeDef,
    GetConfigGroupConfigVersionByProductAndIdResponse
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupConfigVersionByProductAndIdResponse$ {
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupConfigVersionByProductAndIdResponse$inboundSchema;
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupConfigVersionByProductAndIdResponse$outboundSchema;
  /** @deprecated use `GetConfigGroupConfigVersionByProductAndIdResponse$Outbound` instead. */
  export type Outbound =
    GetConfigGroupConfigVersionByProductAndIdResponse$Outbound;
}

export function getConfigGroupConfigVersionByProductAndIdResponseToJSON(
  getConfigGroupConfigVersionByProductAndIdResponse:
    GetConfigGroupConfigVersionByProductAndIdResponse,
): string {
  return JSON.stringify(
    GetConfigGroupConfigVersionByProductAndIdResponse$outboundSchema.parse(
      getConfigGroupConfigVersionByProductAndIdResponse,
    ),
  );
}

export function getConfigGroupConfigVersionByProductAndIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigGroupConfigVersionByProductAndIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigGroupConfigVersionByProductAndIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigGroupConfigVersionByProductAndIdResponse' from JSON`,
  );
}
