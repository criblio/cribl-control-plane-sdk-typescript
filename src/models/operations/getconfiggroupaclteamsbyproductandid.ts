/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * Name of the Cribl product that contains the Worker Group or Edge Fleet.
 */
export const GetConfigGroupAclTeamsByProductAndIdProduct = {
  Stream: "stream",
  Edge: "edge",
} as const;
/**
 * Name of the Cribl product that contains the Worker Group or Edge Fleet.
 */
export type GetConfigGroupAclTeamsByProductAndIdProduct = ClosedEnum<
  typeof GetConfigGroupAclTeamsByProductAndIdProduct
>;

/**
 * Filter for limiting the response to ACL entries for the specified RBAC resource type.
 */
export const GetConfigGroupAclTeamsByProductAndIdType = {
  Groups: "groups",
  Datasets: "datasets",
  DatasetProviders: "dataset-providers",
  Projects: "projects",
  Dashboards: "dashboards",
  Macros: "macros",
  Notebooks: "notebooks",
  Insights: "insights",
} as const;
/**
 * Filter for limiting the response to ACL entries for the specified RBAC resource type.
 */
export type GetConfigGroupAclTeamsByProductAndIdType = ClosedEnum<
  typeof GetConfigGroupAclTeamsByProductAndIdType
>;

export type GetConfigGroupAclTeamsByProductAndIdRequest = {
  /**
   * Name of the Cribl product that contains the Worker Group or Edge Fleet.
   */
  product: GetConfigGroupAclTeamsByProductAndIdProduct;
  /**
   * The <code>id</code> of the Worker Group or Edge Fleet to get the team ACL for.
   */
  id: string;
  /**
   * Filter for limiting the response to ACL entries for the specified RBAC resource type.
   */
  type?: GetConfigGroupAclTeamsByProductAndIdType | undefined;
};

/**
 * a list of TeamAccessControlList objects
 */
export type GetConfigGroupAclTeamsByProductAndIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.TeamAccessControlList> | undefined;
};

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdProduct$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigGroupAclTeamsByProductAndIdProduct> = z
    .nativeEnum(GetConfigGroupAclTeamsByProductAndIdProduct);

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdProduct$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigGroupAclTeamsByProductAndIdProduct> =
    GetConfigGroupAclTeamsByProductAndIdProduct$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupAclTeamsByProductAndIdProduct$ {
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdProduct$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupAclTeamsByProductAndIdProduct$inboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdProduct$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupAclTeamsByProductAndIdProduct$outboundSchema;
}

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdType$inboundSchema:
  z.ZodNativeEnum<typeof GetConfigGroupAclTeamsByProductAndIdType> = z
    .nativeEnum(GetConfigGroupAclTeamsByProductAndIdType);

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdType$outboundSchema:
  z.ZodNativeEnum<typeof GetConfigGroupAclTeamsByProductAndIdType> =
    GetConfigGroupAclTeamsByProductAndIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupAclTeamsByProductAndIdType$ {
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdType$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupAclTeamsByProductAndIdType$inboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdType$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupAclTeamsByProductAndIdType$outboundSchema;
}

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdRequest$inboundSchema:
  z.ZodType<
    GetConfigGroupAclTeamsByProductAndIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    product: GetConfigGroupAclTeamsByProductAndIdProduct$inboundSchema,
    id: z.string(),
    type: GetConfigGroupAclTeamsByProductAndIdType$inboundSchema.optional(),
  });

/** @internal */
export type GetConfigGroupAclTeamsByProductAndIdRequest$Outbound = {
  product: string;
  id: string;
  type?: string | undefined;
};

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdRequest$outboundSchema:
  z.ZodType<
    GetConfigGroupAclTeamsByProductAndIdRequest$Outbound,
    z.ZodTypeDef,
    GetConfigGroupAclTeamsByProductAndIdRequest
  > = z.object({
    product: GetConfigGroupAclTeamsByProductAndIdProduct$outboundSchema,
    id: z.string(),
    type: GetConfigGroupAclTeamsByProductAndIdType$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupAclTeamsByProductAndIdRequest$ {
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupAclTeamsByProductAndIdRequest$inboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupAclTeamsByProductAndIdRequest$outboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdRequest$Outbound` instead. */
  export type Outbound = GetConfigGroupAclTeamsByProductAndIdRequest$Outbound;
}

export function getConfigGroupAclTeamsByProductAndIdRequestToJSON(
  getConfigGroupAclTeamsByProductAndIdRequest:
    GetConfigGroupAclTeamsByProductAndIdRequest,
): string {
  return JSON.stringify(
    GetConfigGroupAclTeamsByProductAndIdRequest$outboundSchema.parse(
      getConfigGroupAclTeamsByProductAndIdRequest,
    ),
  );
}

export function getConfigGroupAclTeamsByProductAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigGroupAclTeamsByProductAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigGroupAclTeamsByProductAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigGroupAclTeamsByProductAndIdRequest' from JSON`,
  );
}

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdResponse$inboundSchema:
  z.ZodType<
    GetConfigGroupAclTeamsByProductAndIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.TeamAccessControlList$inboundSchema).optional(),
  });

/** @internal */
export type GetConfigGroupAclTeamsByProductAndIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.TeamAccessControlList$Outbound> | undefined;
};

/** @internal */
export const GetConfigGroupAclTeamsByProductAndIdResponse$outboundSchema:
  z.ZodType<
    GetConfigGroupAclTeamsByProductAndIdResponse$Outbound,
    z.ZodTypeDef,
    GetConfigGroupAclTeamsByProductAndIdResponse
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.TeamAccessControlList$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetConfigGroupAclTeamsByProductAndIdResponse$ {
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetConfigGroupAclTeamsByProductAndIdResponse$inboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetConfigGroupAclTeamsByProductAndIdResponse$outboundSchema;
  /** @deprecated use `GetConfigGroupAclTeamsByProductAndIdResponse$Outbound` instead. */
  export type Outbound = GetConfigGroupAclTeamsByProductAndIdResponse$Outbound;
}

export function getConfigGroupAclTeamsByProductAndIdResponseToJSON(
  getConfigGroupAclTeamsByProductAndIdResponse:
    GetConfigGroupAclTeamsByProductAndIdResponse,
): string {
  return JSON.stringify(
    GetConfigGroupAclTeamsByProductAndIdResponse$outboundSchema.parse(
      getConfigGroupAclTeamsByProductAndIdResponse,
    ),
  );
}

export function getConfigGroupAclTeamsByProductAndIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetConfigGroupAclTeamsByProductAndIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetConfigGroupAclTeamsByProductAndIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetConfigGroupAclTeamsByProductAndIdResponse' from JSON`,
  );
}
