/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetSearchDashboardSearchByPackAndIdRequest = {
  /**
   * Unique ID to GET
   */
  id: string;
  /**
   * pack ID to GET
   */
  pack: string;
};

/**
 * a list of SearchDashboard objects
 */
export type GetSearchDashboardSearchByPackAndIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SearchDashboard> | undefined;
};

/** @internal */
export const GetSearchDashboardSearchByPackAndIdRequest$inboundSchema:
  z.ZodType<GetSearchDashboardSearchByPackAndIdRequest, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string(),
      pack: z.string(),
    });

/** @internal */
export type GetSearchDashboardSearchByPackAndIdRequest$Outbound = {
  id: string;
  pack: string;
};

/** @internal */
export const GetSearchDashboardSearchByPackAndIdRequest$outboundSchema:
  z.ZodType<
    GetSearchDashboardSearchByPackAndIdRequest$Outbound,
    z.ZodTypeDef,
    GetSearchDashboardSearchByPackAndIdRequest
  > = z.object({
    id: z.string(),
    pack: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardSearchByPackAndIdRequest$ {
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetSearchDashboardSearchByPackAndIdRequest$inboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetSearchDashboardSearchByPackAndIdRequest$outboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdRequest$Outbound` instead. */
  export type Outbound = GetSearchDashboardSearchByPackAndIdRequest$Outbound;
}

export function getSearchDashboardSearchByPackAndIdRequestToJSON(
  getSearchDashboardSearchByPackAndIdRequest:
    GetSearchDashboardSearchByPackAndIdRequest,
): string {
  return JSON.stringify(
    GetSearchDashboardSearchByPackAndIdRequest$outboundSchema.parse(
      getSearchDashboardSearchByPackAndIdRequest,
    ),
  );
}

export function getSearchDashboardSearchByPackAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetSearchDashboardSearchByPackAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetSearchDashboardSearchByPackAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetSearchDashboardSearchByPackAndIdRequest' from JSON`,
  );
}

/** @internal */
export const GetSearchDashboardSearchByPackAndIdResponse$inboundSchema:
  z.ZodType<
    GetSearchDashboardSearchByPackAndIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.SearchDashboard$inboundSchema).optional(),
  });

/** @internal */
export type GetSearchDashboardSearchByPackAndIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SearchDashboard$Outbound> | undefined;
};

/** @internal */
export const GetSearchDashboardSearchByPackAndIdResponse$outboundSchema:
  z.ZodType<
    GetSearchDashboardSearchByPackAndIdResponse$Outbound,
    z.ZodTypeDef,
    GetSearchDashboardSearchByPackAndIdResponse
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.SearchDashboard$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardSearchByPackAndIdResponse$ {
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetSearchDashboardSearchByPackAndIdResponse$inboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetSearchDashboardSearchByPackAndIdResponse$outboundSchema;
  /** @deprecated use `GetSearchDashboardSearchByPackAndIdResponse$Outbound` instead. */
  export type Outbound = GetSearchDashboardSearchByPackAndIdResponse$Outbound;
}

export function getSearchDashboardSearchByPackAndIdResponseToJSON(
  getSearchDashboardSearchByPackAndIdResponse:
    GetSearchDashboardSearchByPackAndIdResponse,
): string {
  return JSON.stringify(
    GetSearchDashboardSearchByPackAndIdResponse$outboundSchema.parse(
      getSearchDashboardSearchByPackAndIdResponse,
    ),
  );
}

export function getSearchDashboardSearchByPackAndIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetSearchDashboardSearchByPackAndIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetSearchDashboardSearchByPackAndIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetSearchDashboardSearchByPackAndIdResponse' from JSON`,
  );
}
