/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetSearchDashboardByIdRequest = {
  /**
   * Unique ID to GET
   */
  id: string;
};

/**
 * a list of SearchDashboard objects
 */
export type GetSearchDashboardByIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SearchDashboard> | undefined;
};

/** @internal */
export const GetSearchDashboardByIdRequest$inboundSchema: z.ZodType<
  GetSearchDashboardByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetSearchDashboardByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetSearchDashboardByIdRequest$outboundSchema: z.ZodType<
  GetSearchDashboardByIdRequest$Outbound,
  z.ZodTypeDef,
  GetSearchDashboardByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardByIdRequest$ {
  /** @deprecated use `GetSearchDashboardByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetSearchDashboardByIdRequest$inboundSchema;
  /** @deprecated use `GetSearchDashboardByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetSearchDashboardByIdRequest$outboundSchema;
  /** @deprecated use `GetSearchDashboardByIdRequest$Outbound` instead. */
  export type Outbound = GetSearchDashboardByIdRequest$Outbound;
}

export function getSearchDashboardByIdRequestToJSON(
  getSearchDashboardByIdRequest: GetSearchDashboardByIdRequest,
): string {
  return JSON.stringify(
    GetSearchDashboardByIdRequest$outboundSchema.parse(
      getSearchDashboardByIdRequest,
    ),
  );
}

export function getSearchDashboardByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSearchDashboardByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSearchDashboardByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSearchDashboardByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetSearchDashboardByIdResponse$inboundSchema: z.ZodType<
  GetSearchDashboardByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$inboundSchema).optional(),
});

/** @internal */
export type GetSearchDashboardByIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SearchDashboard$Outbound> | undefined;
};

/** @internal */
export const GetSearchDashboardByIdResponse$outboundSchema: z.ZodType<
  GetSearchDashboardByIdResponse$Outbound,
  z.ZodTypeDef,
  GetSearchDashboardByIdResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchDashboardByIdResponse$ {
  /** @deprecated use `GetSearchDashboardByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetSearchDashboardByIdResponse$inboundSchema;
  /** @deprecated use `GetSearchDashboardByIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetSearchDashboardByIdResponse$outboundSchema;
  /** @deprecated use `GetSearchDashboardByIdResponse$Outbound` instead. */
  export type Outbound = GetSearchDashboardByIdResponse$Outbound;
}

export function getSearchDashboardByIdResponseToJSON(
  getSearchDashboardByIdResponse: GetSearchDashboardByIdResponse,
): string {
  return JSON.stringify(
    GetSearchDashboardByIdResponse$outboundSchema.parse(
      getSearchDashboardByIdResponse,
    ),
  );
}

export function getSearchDashboardByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetSearchDashboardByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSearchDashboardByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSearchDashboardByIdResponse' from JSON`,
  );
}
