/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetSearchJobsResultsPollByIdRequest = {
  /**
   * search job id
   */
  id: string;
  /**
   * maximum number of events returned
   */
  limit?: number | undefined;
  /**
   * starting offset of the events
   */
  offset?: number | undefined;
  /**
   * lower bound of the time range, inclusive
   */
  lowerBound?: number | undefined;
  /**
   * upper bound of the time range, exclusive
   */
  upperBound?: number | undefined;
  /**
   * last known status of the Search Job. Used to return immediatelyupon status change if the status was queued.
   */
  lastJobStatus?: string | undefined;
};

/** @internal */
export const GetSearchJobsResultsPollByIdRequest$inboundSchema: z.ZodType<
  GetSearchJobsResultsPollByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  limit: z.number().optional(),
  offset: z.number().optional(),
  lowerBound: z.number().optional(),
  upperBound: z.number().optional(),
  lastJobStatus: z.string().optional(),
});

/** @internal */
export type GetSearchJobsResultsPollByIdRequest$Outbound = {
  id: string;
  limit?: number | undefined;
  offset?: number | undefined;
  lowerBound?: number | undefined;
  upperBound?: number | undefined;
  lastJobStatus?: string | undefined;
};

/** @internal */
export const GetSearchJobsResultsPollByIdRequest$outboundSchema: z.ZodType<
  GetSearchJobsResultsPollByIdRequest$Outbound,
  z.ZodTypeDef,
  GetSearchJobsResultsPollByIdRequest
> = z.object({
  id: z.string(),
  limit: z.number().optional(),
  offset: z.number().optional(),
  lowerBound: z.number().optional(),
  upperBound: z.number().optional(),
  lastJobStatus: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSearchJobsResultsPollByIdRequest$ {
  /** @deprecated use `GetSearchJobsResultsPollByIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetSearchJobsResultsPollByIdRequest$inboundSchema;
  /** @deprecated use `GetSearchJobsResultsPollByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetSearchJobsResultsPollByIdRequest$outboundSchema;
  /** @deprecated use `GetSearchJobsResultsPollByIdRequest$Outbound` instead. */
  export type Outbound = GetSearchJobsResultsPollByIdRequest$Outbound;
}

export function getSearchJobsResultsPollByIdRequestToJSON(
  getSearchJobsResultsPollByIdRequest: GetSearchJobsResultsPollByIdRequest,
): string {
  return JSON.stringify(
    GetSearchJobsResultsPollByIdRequest$outboundSchema.parse(
      getSearchJobsResultsPollByIdRequest,
    ),
  );
}

export function getSearchJobsResultsPollByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSearchJobsResultsPollByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetSearchJobsResultsPollByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSearchJobsResultsPollByIdRequest' from JSON`,
  );
}
