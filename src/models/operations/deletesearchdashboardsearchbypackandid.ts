/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type DeleteSearchDashboardSearchByPackAndIdRequest = {
  /**
   * Unique ID to DELETE
   */
  id: string;
  /**
   * pack ID to DELETE
   */
  pack: string;
};

/**
 * a list of SearchDashboard objects
 */
export type DeleteSearchDashboardSearchByPackAndIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SearchDashboard> | undefined;
};

/** @internal */
export const DeleteSearchDashboardSearchByPackAndIdRequest$inboundSchema:
  z.ZodType<
    DeleteSearchDashboardSearchByPackAndIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    pack: z.string(),
  });

/** @internal */
export type DeleteSearchDashboardSearchByPackAndIdRequest$Outbound = {
  id: string;
  pack: string;
};

/** @internal */
export const DeleteSearchDashboardSearchByPackAndIdRequest$outboundSchema:
  z.ZodType<
    DeleteSearchDashboardSearchByPackAndIdRequest$Outbound,
    z.ZodTypeDef,
    DeleteSearchDashboardSearchByPackAndIdRequest
  > = z.object({
    id: z.string(),
    pack: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSearchDashboardSearchByPackAndIdRequest$ {
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteSearchDashboardSearchByPackAndIdRequest$inboundSchema;
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSearchDashboardSearchByPackAndIdRequest$outboundSchema;
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdRequest$Outbound` instead. */
  export type Outbound = DeleteSearchDashboardSearchByPackAndIdRequest$Outbound;
}

export function deleteSearchDashboardSearchByPackAndIdRequestToJSON(
  deleteSearchDashboardSearchByPackAndIdRequest:
    DeleteSearchDashboardSearchByPackAndIdRequest,
): string {
  return JSON.stringify(
    DeleteSearchDashboardSearchByPackAndIdRequest$outboundSchema.parse(
      deleteSearchDashboardSearchByPackAndIdRequest,
    ),
  );
}

export function deleteSearchDashboardSearchByPackAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteSearchDashboardSearchByPackAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteSearchDashboardSearchByPackAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteSearchDashboardSearchByPackAndIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteSearchDashboardSearchByPackAndIdResponse$inboundSchema:
  z.ZodType<
    DeleteSearchDashboardSearchByPackAndIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.SearchDashboard$inboundSchema).optional(),
  });

/** @internal */
export type DeleteSearchDashboardSearchByPackAndIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SearchDashboard$Outbound> | undefined;
};

/** @internal */
export const DeleteSearchDashboardSearchByPackAndIdResponse$outboundSchema:
  z.ZodType<
    DeleteSearchDashboardSearchByPackAndIdResponse$Outbound,
    z.ZodTypeDef,
    DeleteSearchDashboardSearchByPackAndIdResponse
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.SearchDashboard$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSearchDashboardSearchByPackAndIdResponse$ {
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    DeleteSearchDashboardSearchByPackAndIdResponse$inboundSchema;
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSearchDashboardSearchByPackAndIdResponse$outboundSchema;
  /** @deprecated use `DeleteSearchDashboardSearchByPackAndIdResponse$Outbound` instead. */
  export type Outbound =
    DeleteSearchDashboardSearchByPackAndIdResponse$Outbound;
}

export function deleteSearchDashboardSearchByPackAndIdResponseToJSON(
  deleteSearchDashboardSearchByPackAndIdResponse:
    DeleteSearchDashboardSearchByPackAndIdResponse,
): string {
  return JSON.stringify(
    DeleteSearchDashboardSearchByPackAndIdResponse$outboundSchema.parse(
      deleteSearchDashboardSearchByPackAndIdResponse,
    ),
  );
}

export function deleteSearchDashboardSearchByPackAndIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteSearchDashboardSearchByPackAndIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteSearchDashboardSearchByPackAndIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteSearchDashboardSearchByPackAndIdResponse' from JSON`,
  );
}
