/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * a list of SystemSettings objects
 */
export type UpdateSystemSettingsConfResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SystemSettings> | undefined;
};

/** @internal */
export const UpdateSystemSettingsConfResponse$inboundSchema: z.ZodType<
  UpdateSystemSettingsConfResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SystemSettings$inboundSchema).optional(),
});

/** @internal */
export type UpdateSystemSettingsConfResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SystemSettings$Outbound> | undefined;
};

/** @internal */
export const UpdateSystemSettingsConfResponse$outboundSchema: z.ZodType<
  UpdateSystemSettingsConfResponse$Outbound,
  z.ZodTypeDef,
  UpdateSystemSettingsConfResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SystemSettings$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSystemSettingsConfResponse$ {
  /** @deprecated use `UpdateSystemSettingsConfResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateSystemSettingsConfResponse$inboundSchema;
  /** @deprecated use `UpdateSystemSettingsConfResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateSystemSettingsConfResponse$outboundSchema;
  /** @deprecated use `UpdateSystemSettingsConfResponse$Outbound` instead. */
  export type Outbound = UpdateSystemSettingsConfResponse$Outbound;
}

export function updateSystemSettingsConfResponseToJSON(
  updateSystemSettingsConfResponse: UpdateSystemSettingsConfResponse,
): string {
  return JSON.stringify(
    UpdateSystemSettingsConfResponse$outboundSchema.parse(
      updateSystemSettingsConfResponse,
    ),
  );
}

export function updateSystemSettingsConfResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSystemSettingsConfResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSystemSettingsConfResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSystemSettingsConfResponse' from JSON`,
  );
}
