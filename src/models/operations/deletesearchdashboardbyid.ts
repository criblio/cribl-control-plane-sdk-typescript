/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type DeleteSearchDashboardByIdRequest = {
  /**
   * Unique ID to DELETE
   */
  id: string;
};

/**
 * a list of SearchDashboard objects
 */
export type DeleteSearchDashboardByIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.SearchDashboard> | undefined;
};

/** @internal */
export const DeleteSearchDashboardByIdRequest$inboundSchema: z.ZodType<
  DeleteSearchDashboardByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteSearchDashboardByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteSearchDashboardByIdRequest$outboundSchema: z.ZodType<
  DeleteSearchDashboardByIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteSearchDashboardByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSearchDashboardByIdRequest$ {
  /** @deprecated use `DeleteSearchDashboardByIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSearchDashboardByIdRequest$inboundSchema;
  /** @deprecated use `DeleteSearchDashboardByIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteSearchDashboardByIdRequest$outboundSchema;
  /** @deprecated use `DeleteSearchDashboardByIdRequest$Outbound` instead. */
  export type Outbound = DeleteSearchDashboardByIdRequest$Outbound;
}

export function deleteSearchDashboardByIdRequestToJSON(
  deleteSearchDashboardByIdRequest: DeleteSearchDashboardByIdRequest,
): string {
  return JSON.stringify(
    DeleteSearchDashboardByIdRequest$outboundSchema.parse(
      deleteSearchDashboardByIdRequest,
    ),
  );
}

export function deleteSearchDashboardByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSearchDashboardByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSearchDashboardByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSearchDashboardByIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteSearchDashboardByIdResponse$inboundSchema: z.ZodType<
  DeleteSearchDashboardByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$inboundSchema).optional(),
});

/** @internal */
export type DeleteSearchDashboardByIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.SearchDashboard$Outbound> | undefined;
};

/** @internal */
export const DeleteSearchDashboardByIdResponse$outboundSchema: z.ZodType<
  DeleteSearchDashboardByIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteSearchDashboardByIdResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.SearchDashboard$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSearchDashboardByIdResponse$ {
  /** @deprecated use `DeleteSearchDashboardByIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteSearchDashboardByIdResponse$inboundSchema;
  /** @deprecated use `DeleteSearchDashboardByIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSearchDashboardByIdResponse$outboundSchema;
  /** @deprecated use `DeleteSearchDashboardByIdResponse$Outbound` instead. */
  export type Outbound = DeleteSearchDashboardByIdResponse$Outbound;
}

export function deleteSearchDashboardByIdResponseToJSON(
  deleteSearchDashboardByIdResponse: DeleteSearchDashboardByIdResponse,
): string {
  return JSON.stringify(
    DeleteSearchDashboardByIdResponse$outboundSchema.parse(
      deleteSearchDashboardByIdResponse,
    ),
  );
}

export function deleteSearchDashboardByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSearchDashboardByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSearchDashboardByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSearchDashboardByIdResponse' from JSON`,
  );
}
