/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  DiffFiles,
  DiffFiles$inboundSchema,
  DiffFiles$Outbound,
  DiffFiles$outboundSchema,
} from "./difffiles.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type GitDiffResult = {
  diffJson: Array<DiffFiles>;
};

/** @internal */
export const GitDiffResult$inboundSchema: z.ZodType<
  GitDiffResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  diffJson: z.array(DiffFiles$inboundSchema),
});

/** @internal */
export type GitDiffResult$Outbound = {
  diffJson: Array<DiffFiles$Outbound>;
};

/** @internal */
export const GitDiffResult$outboundSchema: z.ZodType<
  GitDiffResult$Outbound,
  z.ZodTypeDef,
  GitDiffResult
> = z.object({
  diffJson: z.array(DiffFiles$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GitDiffResult$ {
  /** @deprecated use `GitDiffResult$inboundSchema` instead. */
  export const inboundSchema = GitDiffResult$inboundSchema;
  /** @deprecated use `GitDiffResult$outboundSchema` instead. */
  export const outboundSchema = GitDiffResult$outboundSchema;
  /** @deprecated use `GitDiffResult$Outbound` instead. */
  export type Outbound = GitDiffResult$Outbound;
}

export function gitDiffResultToJSON(gitDiffResult: GitDiffResult): string {
  return JSON.stringify(GitDiffResult$outboundSchema.parse(gitDiffResult));
}

export function gitDiffResultFromJSON(
  jsonString: string,
): SafeParseResult<GitDiffResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GitDiffResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GitDiffResult' from JSON`,
  );
}
