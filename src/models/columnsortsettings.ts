/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ColumnSortSettings = {
  sort: { [k: string]: any };
};

/** @internal */
export const ColumnSortSettings$inboundSchema: z.ZodType<
  ColumnSortSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  sort: z.record(z.any()),
});

/** @internal */
export type ColumnSortSettings$Outbound = {
  sort: { [k: string]: any };
};

/** @internal */
export const ColumnSortSettings$outboundSchema: z.ZodType<
  ColumnSortSettings$Outbound,
  z.ZodTypeDef,
  ColumnSortSettings
> = z.object({
  sort: z.record(z.any()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ColumnSortSettings$ {
  /** @deprecated use `ColumnSortSettings$inboundSchema` instead. */
  export const inboundSchema = ColumnSortSettings$inboundSchema;
  /** @deprecated use `ColumnSortSettings$outboundSchema` instead. */
  export const outboundSchema = ColumnSortSettings$outboundSchema;
  /** @deprecated use `ColumnSortSettings$Outbound` instead. */
  export type Outbound = ColumnSortSettings$Outbound;
}

export function columnSortSettingsToJSON(
  columnSortSettings: ColumnSortSettings,
): string {
  return JSON.stringify(
    ColumnSortSettings$outboundSchema.parse(columnSortSettings),
  );
}

export function columnSortSettingsFromJSON(
  jsonString: string,
): SafeParseResult<ColumnSortSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ColumnSortSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ColumnSortSettings' from JSON`,
  );
}
