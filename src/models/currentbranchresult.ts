/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CurrentBranchResult = {
  branch: string;
};

/** @internal */
export const CurrentBranchResult$inboundSchema: z.ZodType<
  CurrentBranchResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  branch: z.string(),
});

/** @internal */
export type CurrentBranchResult$Outbound = {
  branch: string;
};

/** @internal */
export const CurrentBranchResult$outboundSchema: z.ZodType<
  CurrentBranchResult$Outbound,
  z.ZodTypeDef,
  CurrentBranchResult
> = z.object({
  branch: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CurrentBranchResult$ {
  /** @deprecated use `CurrentBranchResult$inboundSchema` instead. */
  export const inboundSchema = CurrentBranchResult$inboundSchema;
  /** @deprecated use `CurrentBranchResult$outboundSchema` instead. */
  export const outboundSchema = CurrentBranchResult$outboundSchema;
  /** @deprecated use `CurrentBranchResult$Outbound` instead. */
  export type Outbound = CurrentBranchResult$Outbound;
}

export function currentBranchResultToJSON(
  currentBranchResult: CurrentBranchResult,
): string {
  return JSON.stringify(
    CurrentBranchResult$outboundSchema.parse(currentBranchResult),
  );
}

export function currentBranchResultFromJSON(
  jsonString: string,
): SafeParseResult<CurrentBranchResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CurrentBranchResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CurrentBranchResult' from JSON`,
  );
}
