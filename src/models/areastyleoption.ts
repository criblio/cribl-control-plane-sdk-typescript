/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AreaStyleOption = {
  opacity?: number | undefined;
  shadowBlur?: number | undefined;
  shadowColor?: string | undefined;
  shadowOffsetX?: number | undefined;
  shadowOffsetY?: number | undefined;
};

/** @internal */
export const AreaStyleOption$inboundSchema: z.ZodType<
  AreaStyleOption,
  z.ZodTypeDef,
  unknown
> = z.object({
  opacity: z.number().optional(),
  shadowBlur: z.number().optional(),
  shadowColor: z.string().optional(),
  shadowOffsetX: z.number().optional(),
  shadowOffsetY: z.number().optional(),
});

/** @internal */
export type AreaStyleOption$Outbound = {
  opacity?: number | undefined;
  shadowBlur?: number | undefined;
  shadowColor?: string | undefined;
  shadowOffsetX?: number | undefined;
  shadowOffsetY?: number | undefined;
};

/** @internal */
export const AreaStyleOption$outboundSchema: z.ZodType<
  AreaStyleOption$Outbound,
  z.ZodTypeDef,
  AreaStyleOption
> = z.object({
  opacity: z.number().optional(),
  shadowBlur: z.number().optional(),
  shadowColor: z.string().optional(),
  shadowOffsetX: z.number().optional(),
  shadowOffsetY: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AreaStyleOption$ {
  /** @deprecated use `AreaStyleOption$inboundSchema` instead. */
  export const inboundSchema = AreaStyleOption$inboundSchema;
  /** @deprecated use `AreaStyleOption$outboundSchema` instead. */
  export const outboundSchema = AreaStyleOption$outboundSchema;
  /** @deprecated use `AreaStyleOption$Outbound` instead. */
  export type Outbound = AreaStyleOption$Outbound;
}

export function areaStyleOptionToJSON(
  areaStyleOption: AreaStyleOption,
): string {
  return JSON.stringify(AreaStyleOption$outboundSchema.parse(areaStyleOption));
}

export function areaStyleOptionFromJSON(
  jsonString: string,
): SafeParseResult<AreaStyleOption, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AreaStyleOption$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AreaStyleOption' from JSON`,
  );
}
