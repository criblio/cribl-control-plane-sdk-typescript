/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type OutputSamplesResponse = {
  events: Array<{ [k: string]: any }>;
};

/** @internal */
export const OutputSamplesResponse$inboundSchema: z.ZodType<
  OutputSamplesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  events: z.array(z.record(z.any())),
});

/** @internal */
export type OutputSamplesResponse$Outbound = {
  events: Array<{ [k: string]: any }>;
};

/** @internal */
export const OutputSamplesResponse$outboundSchema: z.ZodType<
  OutputSamplesResponse$Outbound,
  z.ZodTypeDef,
  OutputSamplesResponse
> = z.object({
  events: z.array(z.record(z.any())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutputSamplesResponse$ {
  /** @deprecated use `OutputSamplesResponse$inboundSchema` instead. */
  export const inboundSchema = OutputSamplesResponse$inboundSchema;
  /** @deprecated use `OutputSamplesResponse$outboundSchema` instead. */
  export const outboundSchema = OutputSamplesResponse$outboundSchema;
  /** @deprecated use `OutputSamplesResponse$Outbound` instead. */
  export type Outbound = OutputSamplesResponse$Outbound;
}

export function outputSamplesResponseToJSON(
  outputSamplesResponse: OutputSamplesResponse,
): string {
  return JSON.stringify(
    OutputSamplesResponse$outboundSchema.parse(outputSamplesResponse),
  );
}

export function outputSamplesResponseFromJSON(
  jsonString: string,
): SafeParseResult<OutputSamplesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutputSamplesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutputSamplesResponse' from JSON`,
  );
}
