/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type JobExecutionWarning = {
  text?: string | undefined;
  type: string;
};

/** @internal */
export const JobExecutionWarning$inboundSchema: z.ZodType<
  JobExecutionWarning,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string().optional(),
  type: z.string(),
});

/** @internal */
export type JobExecutionWarning$Outbound = {
  text?: string | undefined;
  type: string;
};

/** @internal */
export const JobExecutionWarning$outboundSchema: z.ZodType<
  JobExecutionWarning$Outbound,
  z.ZodTypeDef,
  JobExecutionWarning
> = z.object({
  text: z.string().optional(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobExecutionWarning$ {
  /** @deprecated use `JobExecutionWarning$inboundSchema` instead. */
  export const inboundSchema = JobExecutionWarning$inboundSchema;
  /** @deprecated use `JobExecutionWarning$outboundSchema` instead. */
  export const outboundSchema = JobExecutionWarning$outboundSchema;
  /** @deprecated use `JobExecutionWarning$Outbound` instead. */
  export type Outbound = JobExecutionWarning$Outbound;
}

export function jobExecutionWarningToJSON(
  jobExecutionWarning: JobExecutionWarning,
): string {
  return JSON.stringify(
    JobExecutionWarning$outboundSchema.parse(jobExecutionWarning),
  );
}

export function jobExecutionWarningFromJSON(
  jsonString: string,
): SafeParseResult<JobExecutionWarning, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JobExecutionWarning$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JobExecutionWarning' from JSON`,
  );
}
