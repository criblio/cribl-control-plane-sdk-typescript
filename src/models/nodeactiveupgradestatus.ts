/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const NodeActiveUpgradeStatus = {
  Zero: 0,
  One: 1,
  Two: 2,
} as const;
export type NodeActiveUpgradeStatus = OpenEnum<typeof NodeActiveUpgradeStatus>;

/** @internal */
export const NodeActiveUpgradeStatus$inboundSchema: z.ZodType<
  NodeActiveUpgradeStatus,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(NodeActiveUpgradeStatus),
    z.number().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const NodeActiveUpgradeStatus$outboundSchema: z.ZodType<
  NodeActiveUpgradeStatus,
  z.ZodTypeDef,
  NodeActiveUpgradeStatus
> = z.union([
  z.nativeEnum(NodeActiveUpgradeStatus),
  z.number().and(z.custom<Unrecognized<number>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NodeActiveUpgradeStatus$ {
  /** @deprecated use `NodeActiveUpgradeStatus$inboundSchema` instead. */
  export const inboundSchema = NodeActiveUpgradeStatus$inboundSchema;
  /** @deprecated use `NodeActiveUpgradeStatus$outboundSchema` instead. */
  export const outboundSchema = NodeActiveUpgradeStatus$outboundSchema;
}
