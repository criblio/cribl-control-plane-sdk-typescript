/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  InputAppscope,
  InputAppscope$inboundSchema,
  InputAppscope$Outbound,
  InputAppscope$outboundSchema,
} from "./inputappscope.js";
import {
  InputAzureBlob,
  InputAzureBlob$inboundSchema,
  InputAzureBlob$Outbound,
  InputAzureBlob$outboundSchema,
} from "./inputazureblob.js";
import {
  InputCollection,
  InputCollection$inboundSchema,
  InputCollection$Outbound,
  InputCollection$outboundSchema,
} from "./inputcollection.js";
import {
  InputConfluentCloud,
  InputConfluentCloud$inboundSchema,
  InputConfluentCloud$Outbound,
  InputConfluentCloud$outboundSchema,
} from "./inputconfluentcloud.js";
import {
  InputCribl,
  InputCribl$inboundSchema,
  InputCribl$Outbound,
  InputCribl$outboundSchema,
} from "./inputcribl.js";
import {
  InputCriblHttp,
  InputCriblHttp$inboundSchema,
  InputCriblHttp$Outbound,
  InputCriblHttp$outboundSchema,
} from "./inputcriblhttp.js";
import {
  InputCriblLakeHttp,
  InputCriblLakeHttp$inboundSchema,
  InputCriblLakeHttp$Outbound,
  InputCriblLakeHttp$outboundSchema,
} from "./inputcribllakehttp.js";
import {
  InputCriblmetrics,
  InputCriblmetrics$inboundSchema,
  InputCriblmetrics$Outbound,
  InputCriblmetrics$outboundSchema,
} from "./inputcriblmetrics.js";
import {
  InputCriblTcp,
  InputCriblTcp$inboundSchema,
  InputCriblTcp$Outbound,
  InputCriblTcp$outboundSchema,
} from "./inputcribltcp.js";
import {
  InputCrowdstrike,
  InputCrowdstrike$inboundSchema,
  InputCrowdstrike$Outbound,
  InputCrowdstrike$outboundSchema,
} from "./inputcrowdstrike.js";
import {
  InputDatadogAgent,
  InputDatadogAgent$inboundSchema,
  InputDatadogAgent$Outbound,
  InputDatadogAgent$outboundSchema,
} from "./inputdatadogagent.js";
import {
  InputDatagen,
  InputDatagen$inboundSchema,
  InputDatagen$Outbound,
  InputDatagen$outboundSchema,
} from "./inputdatagen.js";
import {
  InputEdgePrometheus,
  InputEdgePrometheus$inboundSchema,
  InputEdgePrometheus$Outbound,
  InputEdgePrometheus$outboundSchema,
} from "./inputedgeprometheus.js";
import {
  InputElastic,
  InputElastic$inboundSchema,
  InputElastic$Outbound,
  InputElastic$outboundSchema,
} from "./inputelastic.js";
import {
  InputEventhub,
  InputEventhub$inboundSchema,
  InputEventhub$Outbound,
  InputEventhub$outboundSchema,
} from "./inputeventhub.js";
import {
  InputExec,
  InputExec$inboundSchema,
  InputExec$Outbound,
  InputExec$outboundSchema,
} from "./inputexec.js";
import {
  InputFile,
  InputFile$inboundSchema,
  InputFile$Outbound,
  InputFile$outboundSchema,
} from "./inputfile.js";
import {
  InputFirehose,
  InputFirehose$inboundSchema,
  InputFirehose$Outbound,
  InputFirehose$outboundSchema,
} from "./inputfirehose.js";
import {
  InputGooglePubsub,
  InputGooglePubsub$inboundSchema,
  InputGooglePubsub$Outbound,
  InputGooglePubsub$outboundSchema,
} from "./inputgooglepubsub.js";
import {
  InputGrafana,
  InputGrafana$inboundSchema,
  InputGrafana$Outbound,
  InputGrafana$outboundSchema,
} from "./inputgrafana.js";
import {
  InputHttp,
  InputHttp$inboundSchema,
  InputHttp$Outbound,
  InputHttp$outboundSchema,
} from "./inputhttp.js";
import {
  InputHttpRaw,
  InputHttpRaw$inboundSchema,
  InputHttpRaw$Outbound,
  InputHttpRaw$outboundSchema,
} from "./inputhttpraw.js";
import {
  InputJournalFiles,
  InputJournalFiles$inboundSchema,
  InputJournalFiles$Outbound,
  InputJournalFiles$outboundSchema,
} from "./inputjournalfiles.js";
import {
  InputKafka,
  InputKafka$inboundSchema,
  InputKafka$Outbound,
  InputKafka$outboundSchema,
} from "./inputkafka.js";
import {
  InputKinesis,
  InputKinesis$inboundSchema,
  InputKinesis$Outbound,
  InputKinesis$outboundSchema,
} from "./inputkinesis.js";
import {
  InputKubeEvents,
  InputKubeEvents$inboundSchema,
  InputKubeEvents$Outbound,
  InputKubeEvents$outboundSchema,
} from "./inputkubeevents.js";
import {
  InputKubeLogs,
  InputKubeLogs$inboundSchema,
  InputKubeLogs$Outbound,
  InputKubeLogs$outboundSchema,
} from "./inputkubelogs.js";
import {
  InputKubeMetrics,
  InputKubeMetrics$inboundSchema,
  InputKubeMetrics$Outbound,
  InputKubeMetrics$outboundSchema,
} from "./inputkubemetrics.js";
import {
  InputLoki,
  InputLoki$inboundSchema,
  InputLoki$Outbound,
  InputLoki$outboundSchema,
} from "./inputloki.js";
import {
  InputMetrics,
  InputMetrics$inboundSchema,
  InputMetrics$Outbound,
  InputMetrics$outboundSchema,
} from "./inputmetrics.js";
import {
  InputModelDrivenTelemetry,
  InputModelDrivenTelemetry$inboundSchema,
  InputModelDrivenTelemetry$Outbound,
  InputModelDrivenTelemetry$outboundSchema,
} from "./inputmodeldriventelemetry.js";
import {
  InputMsk,
  InputMsk$inboundSchema,
  InputMsk$Outbound,
  InputMsk$outboundSchema,
} from "./inputmsk.js";
import {
  InputNetflow,
  InputNetflow$inboundSchema,
  InputNetflow$Outbound,
  InputNetflow$outboundSchema,
} from "./inputnetflow.js";
import {
  InputOffice365Mgmt,
  InputOffice365Mgmt$inboundSchema,
  InputOffice365Mgmt$Outbound,
  InputOffice365Mgmt$outboundSchema,
} from "./inputoffice365mgmt.js";
import {
  InputOffice365MsgTrace,
  InputOffice365MsgTrace$inboundSchema,
  InputOffice365MsgTrace$Outbound,
  InputOffice365MsgTrace$outboundSchema,
} from "./inputoffice365msgtrace.js";
import {
  InputOffice365Service,
  InputOffice365Service$inboundSchema,
  InputOffice365Service$Outbound,
  InputOffice365Service$outboundSchema,
} from "./inputoffice365service.js";
import {
  InputOpenTelemetry,
  InputOpenTelemetry$inboundSchema,
  InputOpenTelemetry$Outbound,
  InputOpenTelemetry$outboundSchema,
} from "./inputopentelemetry.js";
import {
  InputPrometheus,
  InputPrometheus$inboundSchema,
  InputPrometheus$Outbound,
  InputPrometheus$outboundSchema,
} from "./inputprometheus.js";
import {
  InputPrometheusRw,
  InputPrometheusRw$inboundSchema,
  InputPrometheusRw$Outbound,
  InputPrometheusRw$outboundSchema,
} from "./inputprometheusrw.js";
import {
  InputRawUdp,
  InputRawUdp$inboundSchema,
  InputRawUdp$Outbound,
  InputRawUdp$outboundSchema,
} from "./inputrawudp.js";
import {
  InputS3,
  InputS3$inboundSchema,
  InputS3$Outbound,
  InputS3$outboundSchema,
} from "./inputs3.js";
import {
  InputS3Inventory,
  InputS3Inventory$inboundSchema,
  InputS3Inventory$Outbound,
  InputS3Inventory$outboundSchema,
} from "./inputs3inventory.js";
import {
  InputSecurityLake,
  InputSecurityLake$inboundSchema,
  InputSecurityLake$Outbound,
  InputSecurityLake$outboundSchema,
} from "./inputsecuritylake.js";
import {
  InputSnmp,
  InputSnmp$inboundSchema,
  InputSnmp$Outbound,
  InputSnmp$outboundSchema,
} from "./inputsnmp.js";
import {
  InputSplunk,
  InputSplunk$inboundSchema,
  InputSplunk$Outbound,
  InputSplunk$outboundSchema,
} from "./inputsplunk.js";
import {
  InputSplunkHec,
  InputSplunkHec$inboundSchema,
  InputSplunkHec$Outbound,
  InputSplunkHec$outboundSchema,
} from "./inputsplunkhec.js";
import {
  InputSplunkSearch,
  InputSplunkSearch$inboundSchema,
  InputSplunkSearch$Outbound,
  InputSplunkSearch$outboundSchema,
} from "./inputsplunksearch.js";
import {
  InputSqs,
  InputSqs$inboundSchema,
  InputSqs$Outbound,
  InputSqs$outboundSchema,
} from "./inputsqs.js";
import {
  InputSyslog,
  InputSyslog$inboundSchema,
  InputSyslog$Outbound,
  InputSyslog$outboundSchema,
} from "./inputsyslog.js";
import {
  InputSystemMetrics,
  InputSystemMetrics$inboundSchema,
  InputSystemMetrics$Outbound,
  InputSystemMetrics$outboundSchema,
} from "./inputsystemmetrics.js";
import {
  InputSystemState,
  InputSystemState$inboundSchema,
  InputSystemState$Outbound,
  InputSystemState$outboundSchema,
} from "./inputsystemstate.js";
import {
  InputTcp,
  InputTcp$inboundSchema,
  InputTcp$Outbound,
  InputTcp$outboundSchema,
} from "./inputtcp.js";
import {
  InputTcpjson,
  InputTcpjson$inboundSchema,
  InputTcpjson$Outbound,
  InputTcpjson$outboundSchema,
} from "./inputtcpjson.js";
import {
  InputWef,
  InputWef$inboundSchema,
  InputWef$Outbound,
  InputWef$outboundSchema,
} from "./inputwef.js";
import {
  InputWindowsMetrics,
  InputWindowsMetrics$inboundSchema,
  InputWindowsMetrics$Outbound,
  InputWindowsMetrics$outboundSchema,
} from "./inputwindowsmetrics.js";
import {
  InputWinEventLogs,
  InputWinEventLogs$inboundSchema,
  InputWinEventLogs$Outbound,
  InputWinEventLogs$outboundSchema,
} from "./inputwineventlogs.js";
import {
  InputWiz,
  InputWiz$inboundSchema,
  InputWiz$Outbound,
  InputWiz$outboundSchema,
} from "./inputwiz.js";
import {
  InputWizWebhook,
  InputWizWebhook$inboundSchema,
  InputWizWebhook$Outbound,
  InputWizWebhook$outboundSchema,
} from "./inputwizwebhook.js";
import {
  InputZscalerHec,
  InputZscalerHec$inboundSchema,
  InputZscalerHec$Outbound,
  InputZscalerHec$outboundSchema,
} from "./inputzscalerhec.js";

export type Input =
  | InputMsk
  | InputWiz
  | InputKafka
  | InputConfluentCloud
  | InputOffice365Mgmt
  | InputOffice365Service
  | InputEventhub
  | InputKinesis
  | InputSqs
  | InputJournalFiles
  | InputHttp
  | InputSplunk
  | InputSplunkSearch
  | InputSplunkHec
  | InputAzureBlob
  | InputElastic
  | InputLoki
  | InputPrometheusRw
  | InputExec
  | InputFirehose
  | InputGooglePubsub
  | InputCriblTcp
  | InputCriblHttp
  | InputCriblLakeHttp
  | InputTcpjson
  | InputCrowdstrike
  | InputDatadogAgent
  | InputDatagen
  | InputHttpRaw
  | InputS3
  | InputS3Inventory
  | InputTcp
  | InputWef
  | InputWinEventLogs
  | InputRawUdp
  | InputWizWebhook
  | InputSecurityLake
  | InputZscalerHec
  | InputPrometheus
  | InputEdgePrometheus
  | InputOffice365MsgTrace
  | InputCribl
  | InputSystemMetrics
  | InputSystemState
  | InputKubeMetrics
  | InputKubeLogs
  | InputKubeEvents
  | InputWindowsMetrics
  | InputCriblmetrics
  | InputMetrics
  | InputSnmp
  | InputOpenTelemetry
  | InputModelDrivenTelemetry
  | InputFile
  | InputAppscope
  | InputNetflow
  | InputCollection
  | InputGrafana
  | InputSyslog;

/** @internal */
export const Input$inboundSchema: z.ZodType<Input, z.ZodTypeDef, unknown> = z
  .union([
    InputMsk$inboundSchema,
    InputWiz$inboundSchema,
    InputKafka$inboundSchema,
    InputConfluentCloud$inboundSchema,
    InputOffice365Mgmt$inboundSchema,
    InputOffice365Service$inboundSchema,
    InputEventhub$inboundSchema,
    InputKinesis$inboundSchema,
    InputSqs$inboundSchema,
    InputJournalFiles$inboundSchema,
    InputHttp$inboundSchema,
    InputSplunk$inboundSchema,
    InputSplunkSearch$inboundSchema,
    InputSplunkHec$inboundSchema,
    InputAzureBlob$inboundSchema,
    InputElastic$inboundSchema,
    InputLoki$inboundSchema,
    InputPrometheusRw$inboundSchema,
    InputExec$inboundSchema,
    InputFirehose$inboundSchema,
    InputGooglePubsub$inboundSchema,
    InputCriblTcp$inboundSchema,
    InputCriblHttp$inboundSchema,
    InputCriblLakeHttp$inboundSchema,
    InputTcpjson$inboundSchema,
    InputCrowdstrike$inboundSchema,
    InputDatadogAgent$inboundSchema,
    InputDatagen$inboundSchema,
    InputHttpRaw$inboundSchema,
    InputS3$inboundSchema,
    InputS3Inventory$inboundSchema,
    InputTcp$inboundSchema,
    InputWef$inboundSchema,
    InputWinEventLogs$inboundSchema,
    InputRawUdp$inboundSchema,
    InputWizWebhook$inboundSchema,
    InputSecurityLake$inboundSchema,
    InputZscalerHec$inboundSchema,
    InputPrometheus$inboundSchema,
    InputEdgePrometheus$inboundSchema,
    InputOffice365MsgTrace$inboundSchema,
    InputCribl$inboundSchema,
    InputSystemMetrics$inboundSchema,
    InputSystemState$inboundSchema,
    InputKubeMetrics$inboundSchema,
    InputKubeLogs$inboundSchema,
    InputKubeEvents$inboundSchema,
    InputWindowsMetrics$inboundSchema,
    InputCriblmetrics$inboundSchema,
    InputMetrics$inboundSchema,
    InputSnmp$inboundSchema,
    InputOpenTelemetry$inboundSchema,
    InputModelDrivenTelemetry$inboundSchema,
    InputFile$inboundSchema,
    InputAppscope$inboundSchema,
    InputNetflow$inboundSchema,
    InputCollection$inboundSchema,
    InputGrafana$inboundSchema,
    InputSyslog$inboundSchema,
  ]);

/** @internal */
export type Input$Outbound =
  | InputMsk$Outbound
  | InputWiz$Outbound
  | InputKafka$Outbound
  | InputConfluentCloud$Outbound
  | InputOffice365Mgmt$Outbound
  | InputOffice365Service$Outbound
  | InputEventhub$Outbound
  | InputKinesis$Outbound
  | InputSqs$Outbound
  | InputJournalFiles$Outbound
  | InputHttp$Outbound
  | InputSplunk$Outbound
  | InputSplunkSearch$Outbound
  | InputSplunkHec$Outbound
  | InputAzureBlob$Outbound
  | InputElastic$Outbound
  | InputLoki$Outbound
  | InputPrometheusRw$Outbound
  | InputExec$Outbound
  | InputFirehose$Outbound
  | InputGooglePubsub$Outbound
  | InputCriblTcp$Outbound
  | InputCriblHttp$Outbound
  | InputCriblLakeHttp$Outbound
  | InputTcpjson$Outbound
  | InputCrowdstrike$Outbound
  | InputDatadogAgent$Outbound
  | InputDatagen$Outbound
  | InputHttpRaw$Outbound
  | InputS3$Outbound
  | InputS3Inventory$Outbound
  | InputTcp$Outbound
  | InputWef$Outbound
  | InputWinEventLogs$Outbound
  | InputRawUdp$Outbound
  | InputWizWebhook$Outbound
  | InputSecurityLake$Outbound
  | InputZscalerHec$Outbound
  | InputPrometheus$Outbound
  | InputEdgePrometheus$Outbound
  | InputOffice365MsgTrace$Outbound
  | InputCribl$Outbound
  | InputSystemMetrics$Outbound
  | InputSystemState$Outbound
  | InputKubeMetrics$Outbound
  | InputKubeLogs$Outbound
  | InputKubeEvents$Outbound
  | InputWindowsMetrics$Outbound
  | InputCriblmetrics$Outbound
  | InputMetrics$Outbound
  | InputSnmp$Outbound
  | InputOpenTelemetry$Outbound
  | InputModelDrivenTelemetry$Outbound
  | InputFile$Outbound
  | InputAppscope$Outbound
  | InputNetflow$Outbound
  | InputCollection$Outbound
  | InputGrafana$Outbound
  | InputSyslog$Outbound;

/** @internal */
export const Input$outboundSchema: z.ZodType<
  Input$Outbound,
  z.ZodTypeDef,
  Input
> = z.union([
  InputMsk$outboundSchema,
  InputWiz$outboundSchema,
  InputKafka$outboundSchema,
  InputConfluentCloud$outboundSchema,
  InputOffice365Mgmt$outboundSchema,
  InputOffice365Service$outboundSchema,
  InputEventhub$outboundSchema,
  InputKinesis$outboundSchema,
  InputSqs$outboundSchema,
  InputJournalFiles$outboundSchema,
  InputHttp$outboundSchema,
  InputSplunk$outboundSchema,
  InputSplunkSearch$outboundSchema,
  InputSplunkHec$outboundSchema,
  InputAzureBlob$outboundSchema,
  InputElastic$outboundSchema,
  InputLoki$outboundSchema,
  InputPrometheusRw$outboundSchema,
  InputExec$outboundSchema,
  InputFirehose$outboundSchema,
  InputGooglePubsub$outboundSchema,
  InputCriblTcp$outboundSchema,
  InputCriblHttp$outboundSchema,
  InputCriblLakeHttp$outboundSchema,
  InputTcpjson$outboundSchema,
  InputCrowdstrike$outboundSchema,
  InputDatadogAgent$outboundSchema,
  InputDatagen$outboundSchema,
  InputHttpRaw$outboundSchema,
  InputS3$outboundSchema,
  InputS3Inventory$outboundSchema,
  InputTcp$outboundSchema,
  InputWef$outboundSchema,
  InputWinEventLogs$outboundSchema,
  InputRawUdp$outboundSchema,
  InputWizWebhook$outboundSchema,
  InputSecurityLake$outboundSchema,
  InputZscalerHec$outboundSchema,
  InputPrometheus$outboundSchema,
  InputEdgePrometheus$outboundSchema,
  InputOffice365MsgTrace$outboundSchema,
  InputCribl$outboundSchema,
  InputSystemMetrics$outboundSchema,
  InputSystemState$outboundSchema,
  InputKubeMetrics$outboundSchema,
  InputKubeLogs$outboundSchema,
  InputKubeEvents$outboundSchema,
  InputWindowsMetrics$outboundSchema,
  InputCriblmetrics$outboundSchema,
  InputMetrics$outboundSchema,
  InputSnmp$outboundSchema,
  InputOpenTelemetry$outboundSchema,
  InputModelDrivenTelemetry$outboundSchema,
  InputFile$outboundSchema,
  InputAppscope$outboundSchema,
  InputNetflow$outboundSchema,
  InputCollection$outboundSchema,
  InputGrafana$outboundSchema,
  InputSyslog$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Input$ {
  /** @deprecated use `Input$inboundSchema` instead. */
  export const inboundSchema = Input$inboundSchema;
  /** @deprecated use `Input$outboundSchema` instead. */
  export const outboundSchema = Input$outboundSchema;
  /** @deprecated use `Input$Outbound` instead. */
  export type Outbound = Input$Outbound;
}

export function inputToJSON(input: Input): string {
  return JSON.stringify(Input$outboundSchema.parse(input));
}

export function inputFromJSON(
  jsonString: string,
): SafeParseResult<Input, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Input$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Input' from JSON`,
  );
}
