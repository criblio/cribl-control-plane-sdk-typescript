/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { versionsCommitsFilesCount } from "../funcs/versionsCommitsFilesCount.js";
import { versionsCommitsFilesList } from "../funcs/versionsCommitsFilesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Files extends ClientSDK {
  /**
   * Get a count of files that changed since a commit
   *
   * @remarks
   * Get a count of the files that changed since a commit. Default is the latest commit (HEAD).
   */
  async count(
    request?: operations.GetVersionCountRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetVersionCountResponse> {
    return unwrapAsync(versionsCommitsFilesCount(
      this,
      request,
      options,
    ));
  }

  /**
   * Get the names and statuses of files that changed since a commit
   *
   * @remarks
   * Get the names and statuses of files that changed since a commit. Default is the latest commit (HEAD).
   */
  async list(
    request?: operations.GetVersionFilesRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetVersionFilesResponse> {
    return unwrapAsync(versionsCommitsFilesList(
      this,
      request,
      options,
    ));
  }
}
