/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { destinationsCreate } from "../funcs/destinationsCreate.js";
import { destinationsDelete } from "../funcs/destinationsDelete.js";
import { destinationsGet } from "../funcs/destinationsGet.js";
import { destinationsList } from "../funcs/destinationsList.js";
import { destinationsUpdate } from "../funcs/destinationsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Pq } from "./pq.js";
import { Samples } from "./samples.js";

export class Destinations extends ClientSDK {
  private _pq?: Pq;
  get pq(): Pq {
    return (this._pq ??= new Pq(this._options));
  }

  private _samples?: Samples;
  get samples(): Samples {
    return (this._samples ??= new Samples(this._options));
  }

  /**
   * List all Destinations
   *
   * @remarks
   * Get a list of all Destinations.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.ListOutputResponse> {
    return unwrapAsync(destinationsList(
      this,
      options,
    ));
  }

  /**
   * Create a Destination
   *
   * @remarks
   * Create a new Destination.
   */
  async create(
    request: models.Output,
    options?: RequestOptions,
  ): Promise<operations.CreateOutputResponse> {
    return unwrapAsync(destinationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a Destination
   *
   * @remarks
   * Get the specified Destination.
   */
  async get(
    request: operations.GetOutputByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetOutputByIdResponse> {
    return unwrapAsync(destinationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Destination
   *
   * @remarks
   * Update the specified Destination.</br></br>Provide a complete representation of the Destination that you want to update in the request body. This endpoint does not support partial updates. Cribl removes any omitted fields when updating the Destination.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the updated Destination might not function as expected.
   */
  async update(
    request: operations.UpdateOutputByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateOutputByIdResponse> {
    return unwrapAsync(destinationsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Destination
   *
   * @remarks
   * Delete the specified Destination.
   */
  async delete(
    request: operations.DeleteOutputByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteOutputByIdResponse> {
    return unwrapAsync(destinationsDelete(
      this,
      request,
      options,
    ));
  }
}
