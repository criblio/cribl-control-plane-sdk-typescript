/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { nodesCount } from "../funcs/nodesCount.js";
import { nodesList } from "../funcs/nodesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Summaries } from "./summaries.js";

export class Nodes extends ClientSDK {
  private _summaries?: Summaries;
  get summaries(): Summaries {
    return (this._summaries ??= new Summaries(this._options));
  }

  /**
   * Retrieve detailed metadata for Worker and Edge Nodes
   *
   * @remarks
   * get worker and edge nodes
   */
  async list(
    request?: operations.ListMasterWorkerEntryRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.ListMasterWorkerEntryResponse> {
    return unwrapAsync(nodesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a count of Worker and Edge Nodes
   *
   * @remarks
   * get worker and edge nodes count
   */
  async count(
    request?: operations.GetMasterWorkerEntryRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetMasterWorkerEntryResponse> {
    return unwrapAsync(nodesCount(
      this,
      request,
      options,
    ));
  }
}
