/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sourcesHecTokensCreate } from "../funcs/sourcesHecTokensCreate.js";
import { sourcesHecTokensUpdate } from "../funcs/sourcesHecTokensUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class HecTokens extends ClientSDK {
  /**
   * Add an HEC token and optional metadata to a Splunk HEC Source
   *
   * @remarks
   * Add an HEC token and optional metadata to the specified Splunk HEC Source.
   */
  async create(
    request: operations.CreateInputHecTokenByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateInputHecTokenByIdResponse> {
    return unwrapAsync(sourcesHecTokensCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update metadata for an HEC token for a Splunk HEC Source
   *
   * @remarks
   * Update the metadata for the specified HEC token for the specified Splunk HEC Source.
   */
  async update(
    request: operations.UpdateInputHecTokenByIdAndTokenRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateInputHecTokenByIdAndTokenResponse> {
    return unwrapAsync(sourcesHecTokensUpdate(
      this,
      request,
      options,
    ));
  }
}
