/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { packsDelete } from "../funcs/packsDelete.js";
import { packsInstall } from "../funcs/packsInstall.js";
import { packsList } from "../funcs/packsList.js";
import { packsUpdate } from "../funcs/packsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Packs extends ClientSDK {
  /**
   * Install a Pack
   *
   * @remarks
   * Install Pack
   */
  async install(
    request: models.PackRequestBody,
    options?: RequestOptions,
  ): Promise<operations.CreatePacksResponse> {
    return unwrapAsync(packsInstall(
      this,
      request,
      options,
    ));
  }

  /**
   * List all Packs
   *
   * @remarks
   * Get info on packs
   */
  async list(
    request?: operations.GetPacksRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetPacksResponse> {
    return unwrapAsync(packsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Uninstall a Pack
   *
   * @remarks
   * Uninstall Pack from the system
   */
  async delete(
    request: operations.DeletePacksByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeletePacksByIdResponse> {
    return unwrapAsync(packsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Pack
   *
   * @remarks
   * Upgrade Pack
   */
  async update(
    request: operations.UpdatePacksByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdatePacksByIdResponse> {
    return unwrapAsync(packsUpdate(
      this,
      request,
      options,
    ));
  }
}
