/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { routesAppend } from "../funcs/routesAppend.js";
import { routesGet } from "../funcs/routesGet.js";
import { routesList } from "../funcs/routesList.js";
import { routesUpdate } from "../funcs/routesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Routes extends ClientSDK {
  /**
   * List all Routes
   *
   * @remarks
   * Get a list of all Routes.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.ListRoutesResponse> {
    return unwrapAsync(routesList(
      this,
      options,
    ));
  }

  /**
   * Get a Routing table
   *
   * @remarks
   * Get the specified Routing table.
   */
  async get(
    request: operations.GetRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetRoutesByIdResponse> {
    return unwrapAsync(routesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a Route
   *
   * @remarks
   * Update a Route in the specified Routing table.</br></br>Provide a complete representation of the Routing table, including the Route that you want to update, in the request body. This endpoint does not support partial updates. Cribl removes any omitted Routes and fields when updating.</br></br>Confirm that the configuration in your request body is correct before sending the request. If the configuration is incorrect, the Routing table might not function as expected.
   */
  async update(
    request: operations.UpdateRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateRoutesByIdResponse> {
    return unwrapAsync(routesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Add a Route to the end of the Routing table
   *
   * @remarks
   * Add a Route to the end of the specified Routing table.
   */
  async append(
    request: operations.CreateRoutesAppendByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateRoutesAppendByIdResponse> {
    return unwrapAsync(routesAppend(
      this,
      request,
      options,
    ));
  }
}
