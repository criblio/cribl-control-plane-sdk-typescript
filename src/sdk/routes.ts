/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { routesAppend } from "../funcs/routesAppend.js";
import { routesGet } from "../funcs/routesGet.js";
import { routesList } from "../funcs/routesList.js";
import { routesUpdate } from "../funcs/routesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Routes extends ClientSDK {
  /**
   * Get a list of Routes objects
   *
   * @remarks
   * Get a list of Routes objects
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.ListRoutesResponse> {
    return unwrapAsync(routesList(
      this,
      options,
    ));
  }

  /**
   * Get Routes by ID
   *
   * @remarks
   * Get Routes by ID
   */
  async get(
    request: operations.GetRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetRoutesByIdResponse> {
    return unwrapAsync(routesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Routes
   *
   * @remarks
   * Update Routes
   */
  async update(
    request: operations.UpdateRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateRoutesByIdResponse> {
    return unwrapAsync(routesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Append Routes to the end of the Routing table
   *
   * @remarks
   * Appends routes to the end of the routing table
   */
  async append(
    request: operations.CreateRoutesAppendByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateRoutesAppendByIdResponse> {
    return unwrapAsync(routesAppend(
      this,
      request,
      options,
    ));
  }
}
