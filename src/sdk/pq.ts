/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { destinationsPqClear } from "../funcs/destinationsPqClear.js";
import { destinationsPqGet } from "../funcs/destinationsPqGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Pq extends ClientSDK {
  /**
   * Clear the persistent queue for a Destination
   *
   * @remarks
   * Clear the persistent queue (PQ) for the specified Destination.
   */
  async clear(
    request: operations.DeleteOutputPqByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteOutputPqByIdResponse> {
    return unwrapAsync(destinationsPqClear(
      this,
      request,
      options,
    ));
  }

  /**
   * Get information about the latest job to clear the persistent queue for a Destination
   *
   * @remarks
   * Get information about the latest job to clear the persistent queue (PQ) for the specified Destination.
   */
  async get(
    request: operations.GetOutputPqByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetOutputPqByIdResponse> {
    return unwrapAsync(destinationsPqGet(
      this,
      request,
      options,
    ));
  }
}
