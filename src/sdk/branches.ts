/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { versionsBranchesGet } from "../funcs/versionsBranchesGet.js";
import { versionsBranchesList } from "../funcs/versionsBranchesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Branches extends ClientSDK {
  /**
   * List all branches in the Git repository used for Cribl configuration
   *
   * @remarks
   * get the list of branches
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.GetVersionBranchResponse> {
    return unwrapAsync(versionsBranchesList(
      this,
      options,
    ));
  }

  /**
   * Retrieve the name of the Git branch that the Cribl configuration is checked out to
   *
   * @remarks
   * returns git branch that the config is checked out to, if any
   */
  async get(
    options?: RequestOptions,
  ): Promise<models.CurrentBranchResult> {
    return unwrapAsync(versionsBranchesGet(
      this,
      options,
    ));
  }
}
