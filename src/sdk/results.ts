/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchJobsResultsGet } from "../funcs/searchJobsResultsGet.js";
import { searchJobsResultsPoll } from "../funcs/searchJobsResultsPoll.js";
import { JsonLStream } from "../lib/jsonl.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Results extends ClientSDK {
  /**
   * List search results, when lower/upper bound is provided, offset is relative to the time range.
   *
   * @remarks
   * List search results, when lower/upper bound is provided, offset is relative to the time range.
   */
  async get(
    request: operations.GetSearchJobsResultsByIdRequest,
    options?: RequestOptions,
  ): Promise<JsonLStream<models.SearchJobResults>> {
    return unwrapAsync(searchJobsResultsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * List search results
   *
   * @remarks
   * List search results
   */
  async poll(
    request: operations.GetSearchJobsResultsPollByIdRequest,
    options?: RequestOptions,
  ): Promise<JsonLStream<models.SearchJobResults>> {
    return unwrapAsync(searchJobsResultsPoll(
      this,
      request,
      options,
    ));
  }
}
