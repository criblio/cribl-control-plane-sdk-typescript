name: Generate alpha SDK from dev-remote
permissions:
  checks: write
  contents: write
  pull-requests: write
  statuses: write

on:
  workflow_dispatch: {}
  pull_request:
    types: [labeled, unlabeled]

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure workflow is run from dev-remote branch
        run: |
          if [[ "${GITHUB_REF_NAME}" != "dev-remote" ]]; then
            echo "This workflow can only be run from the dev-remote branch."
            exit 1
          fi

  compute-version:
    needs: check-branch
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.ver.outputs.version }}
    steps:
      - name: Checkout dev-remote
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: dev-remote
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Compute prerelease version (X.Y.Z-alpha.<n>)
        id: ver
        run: |
          set -euo pipefail

          BASE_GEN=$(yq -r '.typescript.version' .speakeasy/gen.yaml)
          BASE_STRIPPED="${BASE_GEN%%-*}"   # e.g. 1.2.3 from 1.2.3-alpha.5

          echo "Version from gen.yaml: ${BASE_GEN}"
          echo "Stripped base:         ${BASE_STRIPPED}"

          # Fetch tags
          git fetch --tags --quiet || true

          # If there are alphas for BASE_STRIPPED, keep that base; otherwise bump patch
          if git ls-remote --tags origin | awk '{print $2}' | sed 's|refs/tags/||' \
              | grep -qE "^${BASE_STRIPPED}-alpha\.[0-9]+$"; then
            BASE="${BASE_STRIPPED}"
            echo "Found existing alpha tags for ${BASE}. Will increment alpha."
          else
            IFS='.' read -r major minor patch <<< "${BASE_STRIPPED}"
            patch=$((patch + 1))
            BASE="${major}.${minor}.${patch}"
            echo "No alphas for ${BASE_STRIPPED}. Bumping patch to ${BASE} and starting alpha.1."
          fi

          PREFIX="${BASE}-alpha."

          # Find next available alpha number
          n=1
          while git ls-remote --tags origin "${PREFIX}${n}" >/dev/null 2>&1; do
            n=$((n+1))
          done

          FINAL="${PREFIX}${n}"
          echo "Computed prerelease: ${FINAL}"
          echo "version=${FINAL}" >> "$GITHUB_OUTPUT"

  generate:
    needs: [check-branch, compute-version]
    uses: speakeasy-api/sdk-generation-action/.github/workflows/workflow-executor.yaml@57452fc95969792de6734a91400a24aeb409964c
    with:
      force: true
      mode: pr
      set_version: ${{ needs.compute-version.outputs.version }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      npm_token: ${{ secrets.NPM_TOKEN }}
      speakeasy_api_key: ${{ secrets.SPEAKEASY_API_KEY }}
